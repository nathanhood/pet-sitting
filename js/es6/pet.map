{"version":3,"file":"pet.js","sources":["@traceur/generated/TemplateParser/0","/Users/nathanhood11/Documents/Code/pet-sitting/public/js/es6/pet.es6.js","@traceur/generated/TemplateParser/1"],"names":[],"mappings":"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","sourcesContent":["var $__placeholder__0 = $__placeholder__1","/* global calculateDamage, getImage, animalId, pets */\n/* jshint unused: false */\n/* exported Pet */\n/* global _ */\n\n\n\nclass Pet{\n  constructor(species, speciesImg, gender, age=3, name='Unknown'){\n    this.species = species;\n    this.speciesImg = `../media/${speciesImg}`;\n    this.gender = gender;\n    this.age = age * 1;\n    this.name = name;\n\n    this.health = _.random(10, 100);\n    this.full = _.random(10, 100);\n    this.mood = _.random(10, 100);\n  }\n\n  static find(name){ //static is keyword for creating a class method\n    return _(pets).find(p=>p.name === name); //_.find can take function. searching for name.\n  }\n\n  eat(){\n    this.full += _.random(3, 6); //increasing property full of 'this' by between 3-8px\n    if(this.full >= 100){this.full = 100;} //limiting max amount to 100\n    this.health += _.random(-5, 0);\n    if(this.health === 0){\n      $(`div[data-name=${this.name}]`).find('.photo').append(`<img class=dead src='../media/dead.png'>`);\n    }\n  }\n\n  sleep(){\n    this.health += _.random(2, 6);\n    if(this.health >= 100){this.health = 100;}\n\n    this.mood += _.random(-4, 0);\n    if(this.mood === 0){\n      $(`div[data-name=${this.name}]`).find('.photo').append(`<img class=dead src='../media/dead.png'>`);\n    }\n  }\n\n  play(){\n    this.mood += _.random(0,3);\n    if(this.mood >= 100){this.mood = 100;}\n\n    this.health += _.random(-2, 5);\n    if(this.health === 0){\n      $(`div[data-name=${this.name}]`).find('.photo').append(`<img class=dead src='../media/dead.png'>`);\n    } else if(this.health >= 100){this.health = 100;}\n\n    this.full += _.random(-5, 0);\n    if(this.full === 0){\n      $(`div[data-name=${this.name}]`).find('.photo').append(`<img class=dead src='../media/dead.png'>`);\n    }\n  }\n\n  update(){\n    $(`div[data-name=${this.name}]`).find('.status > .full > .healthRed > .healthGreen').css('width', this.full +'px');\n    $(`div[data-name=${this.name}]`).find('.status > .health > .healthRed > .healthGreen').css('width', this.health +'px');\n    $(`div[data-name=${this.name}]`).find('.status > .mood > .healthRed > .healthGreen').css('width', this.mood +'px');\n\n  }\n\n\n  render(){//rendering function\n    $('#pets').append(`<div data-name=${this.name} class=pet>\n                        <div class=photo style='background-image:url(\"${this.speciesImg}\")'></div>\n                        <div class=text>\n                        <div class=info>\n                          <div class=name>${this.name}</div>\n                          <div class=gender>${this.gender}</div>\n                          <div class=age>${this.age}yrs old</div>\n                        </div>\n                        <div class=status>\n                          <div class=health>health:\n                            <div class=healthRed>\n                              <div class=healthGreen style='width: ${this.health}px'></div>\n                            </div>\n                          </div>\n                          <div class=full>fullness:\n                            <div class=healthRed>\n                              <div class=healthGreen style='width: ${this.full}px'></div>\n                            </div>\n                          </div>\n                          <div class=mood>mood:\n                            <div class=healthRed>\n                              <div class=healthGreen style='width: ${this.mood}px'></div>\n                            </div>\n                          </div>\n                          <div class=buttons>\n                            <button class=eat>Eat</button>\n                            <button class=sleep>Sleep</button>\n                            <button class=play>Play</button>\n                          </div>\n                        </div>\n                        </div>\n                        </div>`);\n  }\n\n}\n","($traceurRuntime.createClass)($__placeholder__0, $__placeholder__1, $__placeholder__2)"]}